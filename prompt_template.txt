Шаг 1. Разбор самопрезентации:
Прочитай текст самопрезентации и перепиши его в виде чистого текста, строго разбив по блокам (только если соответствующая информация есть во входном тексте):
    [О себе] — полные инициалы, краткая биография, опыт, специализация, интересы.
    [Навыки] — языки программирования, технологии и инструменты (каждый пункт с новой строки).
    [Проекты] — перечень проектов с кратким описанием и используемыми технологиями (каждый проект с новой строки).
    [Образование] — учебное заведение, специальность, годы обучения (каждое место обучения с новой строки).
    [Сертификаты] — название сертификата и дата получения (каждый пункт с новой строки).
    [Контакты] — email, ссылки на GitHub/Telegram/LinkedIn, телефоны и другие способы связи (каждый пункт с новой строки).

Требования:
    Не придумывать данные, которых нет во входном тексте.
    Не дублировать одну и ту же информацию в разных разделах.
    Не добавлять никакой разметки (ни HTML, ни Markdown).
    Сохранять ровно этот порядок разделов.
    Если раздел отсутствует — не выводить его вовсе.

Шаг 2. Генерация HTML:
На основе результата Шага 1 сформируй чистый HTML-фрагмент без тегов <html>, <head>, <body>.
- Каждая секция оформляется как `<section>` с заголовком `<h2>Имя раздела</h2>`.
- Внутри: для текста — `<p>…</p>`, для списков — `<ul><li>…</li></ul>`.
- Если есть SSH-блок, выведи его в `<pre>` с классом `ssh-block`.
- Не повторяй одну и ту же информацию в разных разделах.
- Никаких Markdown, кавычек, обёрток или комментариев — только HTML.
- Избегайте шаблонных фраз и повторов. Если информация уже включена в биографию — не дублируйте её в других секциях.
- Формулируйте кратко, но полно.
- Внутри каждой секции соблюдайте чистую HTML5-структуру: заголовок `<h2>`, затем содержимое — абзацы `<p>` или списки `<ul>`.
- Не придумывайте данные. Не вставляйте раздел, если он не представлен.
- Если упомянуты команды SSH, ключи или пути — добавьте раздел "SSH" с соответствующим содержанием.
- Выводите только HTML-фрагмент, пригодный для вставки на веб-страницу. Никаких пояснений, Markdown, кавычек или обёрток.

Самопрезентация:
{self_presentation}

Ваша задача – на основе этой информации создать структурированный фрагмент HTML-кода для портфолио пользователя со следующими разделами (только если данные для них присутствуют в тексте):
- **О себе:** краткая биография пользователя (например, кто он/она, род деятельности, ключевые факты из опыта, обязательно: полные инициалы, по возможности, и важная информация в самом начале).
- **Навыки:** список языков программирования, технологий и инструментов, которыми владеет пользователь.
- **Проекты:** перечень проектов пользователя с кратким описанием. Укажите используемые технологии или результаты. Если в тексте приведены ссылки на проекты (например, на GitHub), оформите их как гиперссылки в списке.
- **Образование:** информация об образовании (название учебного заведения, специальность, годы обучения).
- **Сертификаты:** полученные сертификаты (если упомянуты).
- **Контакты:** контактная информация (email, ссылка на GitHub, Telegram, LinkedIn и т.д.).

Требования к форматированию вывода:
- **Только HTML-код:** Ответ должен быть выведен в виде чистого HTML-фрагмента без `<html>`, `<head>` и `<body>` тегов. **Не используйте Markdown-разметку или кодовые блоки.** Не нужно оформлять вывод в тройных кавычках или добавлять какие-либо поясняющие тексты. Вывод будет напрямую вставлен в веб-страницу.
- **Структура HTML:** Разделите содержимое на `<section>` для каждого раздела. Каждая секция должна начинаться с заголовка `<h2>` с названием раздела (ровно как указано выше: "О себе", "Навыки", "Проекты", "Образование", "Сертификаты", "Контакты") и содержать соответствующие данные пользователя. Если какой-либо раздел отсутствует в исходном тексте, просто **не включайте** этот раздел в HTML (не оставляйте пустых заголовков).
- **Содержание:** Используйте только информацию из предоставленного текста самопрезентации. **Не придумывайте данные, которых нет во входном тексте.** Например, не добавляйте проектов или навыков, не упомянутых пользователем. Текст внутри каждого раздела оформите полноформатно и формально, без шаблонных фраз и повторов.
- Биографию и образование оформите как абзацы `<p>` (или несколько абзацев, если необходимо).
- Навыки, проекты, сертификаты и контакты оформите в виде списка `<ul>` с элементами `<li>` для наглядности, если перечисляется более одного элемента.
- Если приведены ссылки (например, на профили или проекты), используйте тег `<a>` для оформления ссылки, например: `<li><a href="URL">Название или описание</a></li>`.
- **Кросс-браузерная совместимость и стили:** Пишите стандартный, валидный HTML5, который при необходимости можно стилизовать с помощью CSS или подключить к фреймворкам (Bootstrap и др.). Вы можете добавлять атрибуты классов к элементам для удобства стилизации. Например, можно обернуть всё содержимое в контейнер `<div class="portfolio-content">` или давать класс каждой секции (`<section class="projects">` и т.д.), однако это не строго обязательно. Главное – корректная и чистая структура.

Правила проверки полноты данных:
- Если из текста самопрезентации видно, что некоторых важных данных не хватает для полноценного портфолио (например, вообще не упомянуты навыки **и** проекты, или отсутствует любая информация, кроме имени), **не пытайтесь генерировать HTML-фрагмент наугад**. Вместо этого верните **JSON** с ключом `"clarify"` и массивом из вопросов, чтобы уточнить недостающую информацию у пользователя. Сформулируйте до трёх конкретных вопросов на русском языке, которые помогли бы заполнить пропущенные разделы. Вопросы должны быть открытыми и по делу. *(Пример: если вообще не упомянуты навыки, спросите о навыках: "Какими профессиональными навыками или технологиями вы владеете?"*)
- Такой JSON должен быть единственным содержимым ответа в случае недостатка данных. **Не включайте HTML-фрагмент, если решено вернуть запрос уточнений.**

Помните: если данных достаточно, вы должны вернуть **только HTML-фрагмент** с заполненными секциями. Если данных недостаточно, верните **только JSON** с просьбой уточнить детали. Никакого дополнительного текста вне этих форматов быть не должно.

***Важно:*** Ответ строго должен быть либо корректным фрагментом HTML-кода, либо JSON с запросом уточнений, без лишних символов или пояснений.
Ответ должен быть строго в виде корректного HTML-фрагмента или JSON с запросом уточнений.
